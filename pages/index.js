import Head from "next/head";
import React, { useState } from "react";
import Image from "next/image";
import { BsEnvelope, BsLock } from "react-icons/bs";
import { GetSignInErrorMessages, SignIn } from "../firebase/firebase";
import { useForm } from "react-hook-form";
import FormError from "../components/Error";
import withUnprotected from "../hoc/withUnprotected";
import PassToggle from "../components/PassToggle";
import {
  Button,
  IconButton,
  CircularProgress,
  Alert,
  Snackbar,
} from "@mui/material";

const Login = () => {
  const [error, setError] = useState(false);
  const [isLoading, setIsLoading] = useState(false);
  const [PassInputType, ToggleIcon] = PassToggle();
  const [snackbar, setSnackbar] = useState({ open: false, message: "" });

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();

  const onSubmit = async (values) => {
    setIsLoading(true);
    const { email, password } = values;
    try {
      await SignIn(email, password);
    } catch (error) {
      const message = GetSignInErrorMessages(error.code);
      console.log(message);
      setSnackbar({ open: true, message });
      setIsLoading(false);
    }
  };

  const onSnackbarClose = (event, reason) => {
    if (reason === "clickaway") {
      return;
    }
    setSnackbar({ open: false, message: "" });
  };

  return (
    <>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-gray-100 min-h-screen flex flex-col items-center justify-center w-full flex-1 px-20 text-center">
        <div className="flex justify-center p-6">
          <Image
            src="https://upload.wikimedia.org/wikipedia/commons/5/5e/Siloam_Hospitals.svg"
            width={200}
            height={200}
          />
        </div>
        <div className="bg-white rounded-2xl shadow-2xl flex lg:w-2/3 w-full max-w-4xl">
          <div className="w-3/5 p-5">
            <form onSubmit={handleSubmit(onSubmit)}>
              <div className="mt-20">
                <h2 className="text-3xl font-bold mb-2 text-yellow-400">
                  Silakan Masuk
                </h2>
                <div className="border-2 border-yellow-200 w-28 mb-2 inline-block "></div>
                <div className="flex flex-col items-center">
                  <div className="bg-gray-100 w-64 p-3 mb-5 mt-4 flex items-center">
                    <BsEnvelope className="text-gray-400 mr-2" />
                    <input
                      type="email"
                      name="email"
                      placeholder="Email"
                      className="bg-gray-100 outline-none text-sm flex-1"
                      {...register("email", { required: true })}
                    />
                  </div>
                  <FormError error={errors.email} />
                  <div className="bg-gray-100 w-64 p-3 mb-6 flex items-center">
                    <BsLock className="text-gray-400 mr-2" />
                    <input
                      type={PassInputType}
                      name="password"
                      placeholder="Password"
                      className="bg-gray-100 outline-none text-sm flex-1"
                      {...register("password", {
                        required: true,
                        minLength: 8,
                      })}
                    />
                    <IconButton>{ToggleIcon}</IconButton>
                  </div>
                  <FormError error={errors.password} />
                  <Button
                    type="submit"
                    className="border-2 text-white bg-yellow-400 font-semibold rounded-full px-10 py-2 mb-2 inline-block"
                    variant="contained"
                    disabled={isLoading}
                  >
                    {isLoading && <CircularProgress size={24} sx={{ mr: 1 }} />}
                    Masuk
                  </Button>
                  {error && (
                    <div className="text-red-600">
                      <span>Email atau password anda salah</span>
                    </div>
                  )}
                </div>
              </div>
            </form>
            <Snackbar
              open={snackbar.open}
              autoHideDuration={5000}
              onClose={onSnackbarClose}
              anchorOrigin={{ vertical: "bottom", horizontal: "center" }}
            >
              <Alert
                onClose={onSnackbarClose}
                variant="filled"
                severity="error"
                sx={{ width: "100%" }}
              >
                {snackbar.message}
              </Alert>
            </Snackbar>
          </div>
          <div className="w-2/5 bg-green-400 text-white rounded-br-2xl rounded-tr-2xl py-36 px-12">
            <h2 className="text-3xl font-bold mb-2">Selamat Datang</h2>
            <div className="border-2 border-white w-28 inline-block mb-2"></div>
            <p className="mb-10 font-medium">
              Silakan registrasi jika belum memiliki akun
            </p>
            <a
              href="/registrasi"
              className="border-2 text-green-400 bg-white font-semibold rounded-full px-10 py-2 inline-block"
            >
              Daftar
            </a>
          </div>
        </div>
      </main>
    </>
  );
};

export default withUnprotected(Login);
